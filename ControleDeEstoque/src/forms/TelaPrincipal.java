/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Carro;
import classes.Cliente;
import classes.PessoaFisica;
import classes.PessoaJuridica;
import classes.Locacao;
import dados.CarroDados;
import dados.ClienteDados;
import dados.LocacaoDados;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author matheus.souza
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private Carro carroTemp = null;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGroupBuscarCliente = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCarros = new javax.swing.JTable();
        btnNovoCarro = new javax.swing.JButton();
        btnAlterarCarro1 = new javax.swing.JButton();
        btnExcluirCarro2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtBuscarCarro = new javax.swing.JTextField();
        btnBuscarCarro = new javax.swing.JButton();
        btnLimparBuscarCarro = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnNovoCliente = new javax.swing.JButton();
        btnAlterarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnLimparBuscarCliente = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBuscarCPFCNPJ = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblLocacao = new javax.swing.JTable();
        btnNovaLocacao = new javax.swing.JButton();
        btnDevolverLocacao = new javax.swing.JButton();
        btnExcluirLocacao = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblReceita = new javax.swing.JLabel();
        cmbTipoBusca = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblBuscaPrimaria = new javax.swing.JLabel();
        btnBuscarLocacao = new javax.swing.JButton();
        lblBuscaSecundaria = new javax.swing.JLabel();
        txtBuscaPrimaria = new javax.swing.JTextField();
        txtBuscaSecundaria = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnSairArquivo = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TelaPrincipal");
        setResizable(false);

        tblCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Placa", "Marca", "Modelo", "Ano", "Valor da Di√°ria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCarros);

        btnNovoCarro.setText("Novo");
        btnNovoCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCarroActionPerformed(evt);
            }
        });

        btnAlterarCarro1.setText("Alterar");
        btnAlterarCarro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarCarro1ActionPerformed(evt);
            }
        });

        btnExcluirCarro2.setText("Excluir");
        btnExcluirCarro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCarro2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar pela placa: ");

        btnBuscarCarro.setText("Buscar");
        btnBuscarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCarroActionPerformed(evt);
            }
        });

        btnLimparBuscarCarro.setText("Limpar ");
        btnLimparBuscarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparBuscarCarroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 613, Short.MAX_VALUE)
                        .addComponent(btnNovoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterarCarro1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirCarro2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarCarro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCarro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparBuscarCarro)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscarCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCarro)
                    .addComponent(jLabel1)
                    .addComponent(btnLimparBuscarCarro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoCarro)
                    .addComponent(btnAlterarCarro1)
                    .addComponent(btnExcluirCarro2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Carros", jPanel1);

        btnNovoCliente.setText("Novo");
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnAlterarCliente.setText("Alterar");
        btnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Endere√ßo", "CPF ou CNPJ", "CNH", "DtNascimento", "Desconto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblClientes);

        btnLimparBuscarCliente.setText("Limpar");
        btnLimparBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparBuscarClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar por CPF ou CNPJ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarCPFCNPJ, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparBuscarCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCliente)
                    .addComponent(btnLimparBuscarCliente)
                    .addComponent(jLabel2)
                    .addComponent(txtBuscarCPFCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoCliente)
                    .addComponent(btnAlterarCliente)
                    .addComponent(btnExcluirCliente))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clientes", jPanel2);

        tblLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C√≥digo", "Data de Loca√ß√£o", "Data de Entrega", "Quantidade de Dias Locado", "Valor Total da Loca√ß√£o", "Placa do Carro", "Marca", "Modelo", "Nome", "CPF ou CNPJ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblLocacao);

        btnNovaLocacao.setText("Novo");
        btnNovaLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaLocacaoActionPerformed(evt);
            }
        });

        btnDevolverLocacao.setText("Devolver");
        btnDevolverLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverLocacaoActionPerformed(evt);
            }
        });

        btnExcluirLocacao.setText("Excluir");
        btnExcluirLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirLocacaoActionPerformed(evt);
            }
        });

        jLabel4.setText("Receita Total (R$):");

        cmbTipoBusca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPF OU CNPJ", "PLACA DO CARRO", "DATA", " " }));
        cmbTipoBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoBuscaActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo de busca:");

        lblBuscaPrimaria.setText("CPF ou CNPJ:");

        btnBuscarLocacao.setText("Buscar");
        btnBuscarLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLocacaoActionPerformed(evt);
            }
        });

        lblBuscaSecundaria.setText("Data Final:");

        jLabel5.setText("Filtro:");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TODAS", "DEVOLVIDAS", "N√ÉO DEVOLVIDAS" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblReceita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovaLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDevolverLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluirLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTipoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBuscaPrimaria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscaPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBuscaSecundaria)
                        .addGap(6, 6, 6)
                        .addComponent(txtBuscaSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarLocacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(3, 3, 3)
                        .addComponent(cmbFiltro, 0, 125, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblBuscaPrimaria)
                    .addComponent(btnBuscarLocacao)
                    .addComponent(lblBuscaSecundaria)
                    .addComponent(txtBuscaPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscaSecundaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovaLocacao)
                    .addComponent(btnDevolverLocacao)
                    .addComponent(btnExcluirLocacao)
                    .addComponent(jLabel4)
                    .addComponent(lblReceita))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Loca√ß√µes", jPanel3);

        jMenu1.setText("Arquivo");

        btnSairArquivo.setText("Sair");
        btnSairArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairArquivoActionPerformed(evt);
            }
        });
        jMenu1.add(btnSairArquivo);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairArquivoActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSairArquivoActionPerformed

    private void btnNovoCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCarroActionPerformed
        TelaCadastroCarros telaCadastroCarros = new TelaCadastroCarros(this, true);

        Carro c = telaCadastroCarros.execute();

        CarroDados.lstCarros.add(c);
        this.atualizaTabelaCarros(CarroDados.lstCarros);
    }//GEN-LAST:event_btnNovoCarroActionPerformed

    private void btnAlterarCarro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarCarro1ActionPerformed
        try {
            if (CarroDados.lstCarros.size() > 0) {
                if (tblCarros.getSelectedRow() != -1) {
                    Carro c = CarroDados.lstCarros.get(tblCarros.getSelectedRow());
                    if (c != null) {

                        if (JOptionPane.showConfirmDialog(this,
                                "Deseja alterar " + c.getPlaca() + "?",
                                "Carros",
                                JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                            TelaCadastroCarros telaCadastroCarros = new TelaCadastroCarros(this, true);
                            telaCadastroCarros.execute(c);
                            this.atualizaTabelaCarros(CarroDados.lstCarros);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "N√£o h√° itens selecionados",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° ve√≠culos na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel alterar o carro.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarCarro1ActionPerformed

    private void btnExcluirCarro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCarro2ActionPerformed
        try {

            if (CarroDados.lstCarros.size() > 0) {

                String placa = tblCarros.getValueAt(tblCarros.getSelectedRow(), 0).toString();
                Carro c = CarroDados.obterCarroPorPlaca(placa, CarroDados.lstCarros);
                if (c != null) {

                    if (JOptionPane.showConfirmDialog(this,
                            "Deseja Excluir " + c.getPlaca() + "?",
                            "Carros",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                        //TelaCadastroCarros telaCadastroCarros = new TelaCadastroCarros(this, true);
                        CarroDados.lstCarros.remove(c);

                        this.atualizaTabelaCarros(CarroDados.lstCarros);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel excluir o carro.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirCarro2ActionPerformed

    private void btnBuscarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCarroActionPerformed

        if (!txtBuscarCarro.getText().equals("")) {
            Carro c = CarroDados.obterCarroPorPlaca(txtBuscarCarro.getText().trim(), CarroDados.lstCarros);
            buscaTabelaCarros(c);
        } else {
            atualizaTabelaCarros(CarroDados.lstCarros);
        }
    }//GEN-LAST:event_btnBuscarCarroActionPerformed

    private void btnLimparBuscarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparBuscarCarroActionPerformed
        // TODO add your handling code here:
        atualizaTabelaCarros(CarroDados.lstCarros);
    }//GEN-LAST:event_btnLimparBuscarCarroActionPerformed

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        // TODO add your handling code here:
        TelaCadastroClientes telaCadastroClientes = new TelaCadastroClientes(this, true);

        Cliente c = telaCadastroClientes.execute();

        ClienteDados.lstClientes.add(c);
        this.atualizaTabelaClientes(ClienteDados.lstClientes);
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarClienteActionPerformed
        // TODO add your handling code here:
        try {
            if (ClienteDados.lstClientes.size() > 0) {
                if (tblClientes.getSelectedRow() != -1) {
                    String CPFCNPJ = tblClientes.getValueAt(tblClientes.getSelectedRow(), 2).toString();
                    Cliente c = ClienteDados.obterClientePorCPFouCNPJ(CPFCNPJ, ClienteDados.lstClientes);
                    if (c != null) {

                        if (JOptionPane.showConfirmDialog(this,
                                "Deseja alterar " + c.getNome() + "?",
                                "Clientes",
                                JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                            TelaCadastroClientes telaCadastroClientes = new TelaCadastroClientes(this, true);
                            telaCadastroClientes.execute(c);
                            this.atualizaTabelaClientes(ClienteDados.lstClientes);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "N√£o h√° itens selecionados",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° clientes na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel alterar o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAlterarClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        // TODO add your handling code here:
        try {

            if (ClienteDados.lstClientes.size() > 0) {

                String CPFCNPJ = tblClientes.getValueAt(tblClientes.getSelectedRow(), 2).toString();
                Cliente c = ClienteDados.obterClientePorCPFouCNPJ(CPFCNPJ, ClienteDados.lstClientes);
                if (c != null) {

                    if (JOptionPane.showConfirmDialog(this,
                            "Deseja Excluir " + c.getNome() + "?",
                            "Clietes",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                        //TelaCadastroCarros telaCadastroCarros = new TelaCadastroCarros(this, true);
                        ClienteDados.lstClientes.remove(c);

                        this.atualizaTabelaClientes(ClienteDados.lstClientes);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel excluir o carro.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        // TODO add your handling code here:
        if (!txtBuscarCPFCNPJ.getText().equals("")) {
            Cliente c = ClienteDados.obterClientePorCPFouCNPJ(txtBuscarCPFCNPJ.getText().trim(), ClienteDados.lstClientes);
            buscaTabelaClientes(c);
        } else {
            atualizaTabelaClientes(ClienteDados.lstClientes);
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnLimparBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparBuscarClienteActionPerformed
        // TODO add your handling code here:
        atualizaTabelaClientes(ClienteDados.lstClientes);
    }//GEN-LAST:event_btnLimparBuscarClienteActionPerformed

    private void btnBuscarLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLocacaoActionPerformed
        // TODO add your handling code here:
        try {
            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

            if (cmbTipoBusca.getSelectedIndex() == 0) {
                if (!txtBuscaPrimaria.getText().equals("")) {
                    LocacaoDados.lstBuscaLocacao.clear();
                    LocacaoDados.obterLocacaoPorCPFouCNPJ(txtBuscaPrimaria.getText().trim(), LocacaoDados.lstLocacao);
                    buscaTabelaLocacao(LocacaoDados.lstBuscaLocacao);
                } else {
                    atualizaTabelaLocacao(LocacaoDados.lstLocacao);
                }
            } else if (cmbTipoBusca.getSelectedIndex() == 1) {
                if (!txtBuscaPrimaria.getText().equals("")) {
                    LocacaoDados.lstBuscaLocacao.clear();
                    LocacaoDados.obterLocacaoPorPlacaDoCarro(txtBuscaPrimaria.getText().trim(), LocacaoDados.lstLocacao);
                    buscaTabelaLocacao(LocacaoDados.lstBuscaLocacao);
                } else {
                    atualizaTabelaLocacao(LocacaoDados.lstLocacao);
                }
            } else if (cmbTipoBusca.getSelectedIndex() == 2) {
                if (!txtBuscaPrimaria.getText().equals("")) {
                    LocacaoDados.lstBuscaLocacao.clear();
                    LocacaoDados.obterLocacaoPorData(f.parse(txtBuscaPrimaria.getText().trim()), f.parse(txtBuscaSecundaria.getText().trim()), LocacaoDados.lstLocacao);
                    buscaTabelaLocacao(LocacaoDados.lstBuscaLocacao);
                } else {
                    atualizaTabelaLocacao(LocacaoDados.lstLocacao);
                }
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btnBuscarLocacaoActionPerformed

    private void cmbTipoBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoBuscaActionPerformed
        // TODO add your handling code here:
        try {
            if (cmbTipoBusca.getSelectedIndex() == 0) {

                txtBuscaPrimaria.setText("");
                lblBuscaPrimaria.setText("CPF ou CNPJ:");
                lblBuscaSecundaria.setVisible(false);
                txtBuscaSecundaria.setVisible(false);
            } else if (cmbTipoBusca.getSelectedIndex() == 1) {

                txtBuscaPrimaria.setText("");
                lblBuscaPrimaria.setText("Placa do carro:");
                lblBuscaSecundaria.setVisible(false);
                txtBuscaSecundaria.setVisible(false);
            } else if (cmbTipoBusca.getSelectedIndex() == 2) {

                txtBuscaPrimaria.setText("");
                txtBuscaSecundaria.setText("");
                lblBuscaPrimaria.setText("Data Inicial:");
                lblBuscaSecundaria.setVisible(true);
                txtBuscaSecundaria.setVisible(true);
            }
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_cmbTipoBuscaActionPerformed

    private void btnExcluirLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirLocacaoActionPerformed
        // TODO add your handling code here:
        try {
            if (LocacaoDados.lstLocacao.size() > 0) {
                if (tblLocacao.getSelectedRow() != -1) {
                    String codigoLocacao = tblLocacao.getValueAt(tblLocacao.getSelectedRow(), 0).toString();
                    Locacao l = LocacaoDados.obterLocacaoPorCodigo(codigoLocacao, LocacaoDados.lstLocacao);
                    if (l != null) {
                        if (l.getIsAtiva() == true) {
                            if (JOptionPane.showConfirmDialog(this,
                                    "Deseja Excluir " + l.getCodigo() + "?",
                                    "Clietes",
                                    JOptionPane.YES_NO_OPTION,
                                    JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                                l.getCarro().setIsLocado(false);
                                l.setIsAtiva(false);
                                LocacaoDados.lstLocacao.remove(l);
                                this.atualizaTabelaLocacao(LocacaoDados.lstLocacao);

                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "N√£o √© poss√≠vel excluir essa loca√ß√£o", "Aten√ß√£o", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "N√£o h√° itens selecionados",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° clientes na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel alterar o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirLocacaoActionPerformed

    private void btnDevolverLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverLocacaoActionPerformed
        // TODO add your handling code here:
        try {
            if (LocacaoDados.lstLocacao.size() > 0) {
                if (tblLocacao.getSelectedRow() != -1) {
                    String codigoLocacao = tblLocacao.getValueAt(tblLocacao.getSelectedRow(), 0).toString();
                    Locacao l = LocacaoDados.obterLocacaoPorCodigo(codigoLocacao, LocacaoDados.lstLocacao);
                    if (l != null) {
                        if (l.getIsAtiva() == true) {
                            Date data = new Date();
                            l.setDataEntrega(data);
                            l.valorLocacao();
                            if (l.getCliente() instanceof PessoaJuridica) {
                                l.setValorTotalLocacao(l.getValorTotalLocacao() - (l.getValorTotalLocacao() * ((PessoaJuridica) l.getCliente()).getDesconto()));
                            }
                            if (JOptionPane.showConfirmDialog(this,
                                    "Data da loca√ß√£o: " + l.getDataLocacao() + "\n"
                                    + "Data entrega: " + l.getDataEntrega() + "\n"
                                    + "Quantidade de dias locado: " + l.qtdDiasLocado() + "\n"
                                    + "Valor total da loca√ß√£o(R$): " + l.getValorTotalLocacao() + "\n\n"
                                    + "De acordo com as informa√ß√µes?",
                                    "Loca√ß√µes",
                                    JOptionPane.YES_NO_OPTION,
                                    JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                                l.getCarro().setIsLocado(false);
                                l.setIsAtiva(false);
                                calculoReceita();
                                this.atualizaTabelaLocacao(LocacaoDados.lstLocacao);
                            } else {
                                l.setDataEntrega(null);
                                l.setValorTotalLocacao(0);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Essa ve√≠culo ja foi devolvido", "Aten√ß√£o", JOptionPane.WARNING_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "N√£o h√° itens selecionados",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° loca√ß√µes na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel alterar a loca√ß√£o.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDevolverLocacaoActionPerformed

    private void btnNovaLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaLocacaoActionPerformed
        // TODO add your handling code here:
        TelaNovaLocacao telaNovaLocacao = new TelaNovaLocacao(this, true);

        Locacao l = telaNovaLocacao.execute();

        LocacaoDados.lstLocacao.add(l);
        this.atualizaTabelaLocacao(LocacaoDados.lstLocacao);
    }//GEN-LAST:event_btnNovaLocacaoActionPerformed

    private void calculoReceita() {

        float receita = 0;

        for (Locacao locacao : LocacaoDados.lstLocacao) {
            receita += locacao.getValorTotalLocacao();
        }

        lblReceita.setText(Float.toString(receita));
    }

    private void atualizaTabelaLocacao(List<Locacao> tabelaLocacao) {

        try {
            DefaultTableModel modelo = (DefaultTableModel) tblLocacao.getModel();
            modelo.getDataVector().removeAllElements();

            for (Locacao locacao : tabelaLocacao) {
                Vector v = new Vector();
                v.add(locacao.getCodigo());
                v.add(locacao.getDataLocacao());
                v.add(locacao.getDataEntrega());
                v.add(locacao.qtdDiasLocado());
                v.add(locacao.getValorTotalLocacao());
                v.add(locacao.getCarro().getPlaca());
                v.add(locacao.getCarro().getMarca());
                v.add(locacao.getCarro().getModelo());
                v.add(locacao.getCliente().getNome());
                v.add(locacao.getCliente().getCPFouCNPJ());

                modelo.addRow(v);

            }

            tblLocacao.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel carregar a nova locacao.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscaTabelaLocacao(List<Locacao> tabelaLocacao) {
        try {
            if (!ClienteDados.lstClientes.isEmpty()) {
                if (!tabelaLocacao.isEmpty()) {

                    DefaultTableModel modelo = (DefaultTableModel) tblLocacao.getModel();
                    modelo.getDataVector().removeAllElements();

                    for (Locacao locacao : tabelaLocacao) {
                        if (cmbFiltro.getSelectedIndex() == 0) {
                            Vector v = new Vector();
                            v.add(locacao.getCodigo());
                            v.add(locacao.getDataLocacao());
                            v.add(locacao.getDataEntrega());
                            v.add(locacao.qtdDiasLocado());
                            v.add(locacao.getValorTotalLocacao());
                            v.add(locacao.getCarro().getPlaca());
                            v.add(locacao.getCarro().getMarca());
                            v.add(locacao.getCarro().getModelo());
                            v.add(locacao.getCliente().getNome());
                            v.add(locacao.getCliente().getCPFouCNPJ());

                            modelo.addRow(v);
                        } else if (cmbFiltro.getSelectedIndex() == 1) {
                            if (locacao.getIsAtiva() == false) {
                                Vector v = new Vector();
                                v.add(locacao.getCodigo());
                                v.add(locacao.getDataLocacao());
                                v.add(locacao.getDataEntrega());
                                v.add(locacao.qtdDiasLocado());
                                v.add(locacao.getValorTotalLocacao());
                                v.add(locacao.getCarro().getPlaca());
                                v.add(locacao.getCarro().getMarca());
                                v.add(locacao.getCarro().getModelo());
                                v.add(locacao.getCliente().getNome());
                                v.add(locacao.getCliente().getCPFouCNPJ());
                                
                                modelo.addRow(v);
                            }
                        } else if (cmbFiltro.getSelectedIndex() == 2) {
                            if (locacao.getIsAtiva() == true) {
                                Vector v = new Vector();
                                v.add(locacao.getCodigo());
                                v.add(locacao.getDataLocacao());
                                v.add(locacao.getDataEntrega());
                                v.add(locacao.qtdDiasLocado());
                                v.add(locacao.getValorTotalLocacao());
                                v.add(locacao.getCarro().getPlaca());
                                v.add(locacao.getCarro().getMarca());
                                v.add(locacao.getCarro().getModelo());
                                v.add(locacao.getCliente().getNome());
                                v.add(locacao.getCliente().getCPFouCNPJ());
                                
                                modelo.addRow(v);
                            }
                        }
                    }

                    tblLocacao.repaint();
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhuma loca√ß√£o foi encontrado!",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° loca√ß√µes na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel buscar a loca√ß√£o.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizaTabelaCarros(List<Carro> tabelaCarros) {

        try {
            DefaultTableModel modelo = (DefaultTableModel) tblCarros.getModel();
            modelo.getDataVector().removeAllElements();

            for (Carro carros : tabelaCarros) {
                Vector v = new Vector();
                v.add(carros.getPlaca());
                v.add(carros.getMarca());
                v.add(carros.getModelo());
                v.add(carros.getAno());
                v.add(carros.getValorDiariaLocacao());

                modelo.addRow(v);

            }

            tblCarros.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel carregar o novo carro.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscaTabelaCarros(Carro carro) {
        try {
            if (!CarroDados.lstCarros.isEmpty()) {
                if (carro != null) {
                    DefaultTableModel modelo = (DefaultTableModel) tblCarros.getModel();
                    modelo.getDataVector().removeAllElements();

                    Vector v = new Vector();
                    v.add(carro.getPlaca());
                    v.add(carro.getMarca());
                    v.add(carro.getModelo());
                    v.add(carro.getAno());
                    v.add(carro.getValorDiariaLocacao());

                    modelo.addRow(v);

                    tblCarros.repaint();
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhum ve√≠culo foi encontrado!",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° ve√≠culos na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel buscar o carro.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizaTabelaClientes(List<Cliente> tabelaClientes) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
            modelo.getDataVector().removeAllElements();

            for (Cliente clientes : tabelaClientes) {
                Vector v = new Vector();
                v.add(clientes.getNome());
                v.add(clientes.getEndereco());
                v.add(clientes.getCPFouCNPJ());
                v.add(clientes.getCNHouCNHResp());

                if (clientes instanceof PessoaFisica) {
                    v.add(((PessoaFisica) clientes).getDtNascimento());
                    v.add(null);
                } else if (clientes instanceof PessoaJuridica) {
                    v.add(null);
                    v.add(((PessoaJuridica) clientes).getDescontoLocacao());
                }

                modelo.addRow(v);
            }

            tblClientes.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel carregar o novo cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private void buscaTabelaClientes(Cliente clientes) {
        try {
            if (!ClienteDados.lstClientes.isEmpty()) {
                if (clientes != null) {
                    DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();
                    modelo.getDataVector().removeAllElements();
                    Vector v = new Vector();
                    v.add(clientes.getNome());
                    v.add(clientes.getEndereco());
                    v.add(clientes.getCPFouCNPJ());
                    v.add(clientes.getCNHouCNHResp());

                    if (clientes instanceof PessoaFisica) {
                        v.add(((PessoaFisica) clientes).getDtNascimento());
                        v.add(null);
                    } else if (clientes instanceof PessoaJuridica) {
                        v.add(null);
                        v.add(((PessoaJuridica) clientes).getDescontoLocacao());
                    }

                    modelo.addRow(v);

                    tblCarros.repaint();
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhum cliente foi encontrado!",
                            "Aten√ß√£o",
                            JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "N√£o h√° cliente na lista!",
                        "Aten√ß√£o",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "N√£o foi poss√≠vel buscar o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
                lblBuscaSecundaria.setVisible(false);
                txtBuscaSecundaria.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCarro1;
    private javax.swing.JButton btnAlterarCliente;
    private javax.swing.JButton btnBuscarCarro;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarLocacao;
    private javax.swing.JButton btnDevolverLocacao;
    private javax.swing.JButton btnExcluirCarro2;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnExcluirLocacao;
    private javax.swing.ButtonGroup btnGroupBuscarCliente;
    private javax.swing.JButton btnLimparBuscarCarro;
    private javax.swing.JButton btnLimparBuscarCliente;
    private javax.swing.JButton btnNovaLocacao;
    private javax.swing.JButton btnNovoCarro;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JMenuItem btnSairArquivo;
    private javax.swing.JComboBox<String> cmbFiltro;
    private javax.swing.JComboBox<String> cmbTipoBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBuscaPrimaria;
    private static javax.swing.JLabel lblBuscaSecundaria;
    private javax.swing.JLabel lblReceita;
    private javax.swing.JTable tblCarros;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblLocacao;
    private javax.swing.JTextField txtBuscaPrimaria;
    private static javax.swing.JTextField txtBuscaSecundaria;
    private javax.swing.JTextField txtBuscarCPFCNPJ;
    private javax.swing.JTextField txtBuscarCarro;
    // End of variables declaration//GEN-END:variables
}
